//
// Created by Robert Nagtegaal on 18/07/2025.
//

#ifndef BEZIERCURVESPAWN_H
#define BEZIERCURVESPAWN_H
#include <iostream>
#include <GL/glew.h>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <vector>


struct Vertex {
    glm::vec3 position;
    glm::vec3 normal;
};

inline std::vector<Vertex> vertices;
inline std::vector<unsigned int> indices;
inline GLuint vao;

void generatePawnGeometry(const std::vector<std::array<float, 8>>& bezierSegments,
                          std::vector<Vertex>& vertices,
                          std::vector<unsigned int>& indices,
                          int samplesPerCurve,
                          int segments);
std::vector<Vertex> generateRevolvedMesh(const std::vector<glm::vec2>& profile, int segments);
std::vector<std::pair<float, float>> sampleProfile(const std::vector<std::array<float, 8>>& profile, int samplesPerCurve);

// Sample a cubic Bezier segment defined by 4 control points
inline std::pair<float, float> bezierPoint(const std::array<float, 8>& segment, float t) {
    float x0 = segment[0], y0 = segment[1];
    float x1 = segment[2], y1 = segment[3];
    float x2 = segment[4], y2 = segment[5];
    float x3 = segment[6], y3 = segment[7];

    float oneMinusT = 1.0f - t;

    float x =
        oneMinusT * oneMinusT * oneMinusT * x0 +
        3 * oneMinusT * oneMinusT * t * x1 +
        3 * oneMinusT * t * t * x2 +
        t * t * t * x3;

    float y =
        oneMinusT * oneMinusT * oneMinusT * y0 +
        3 * oneMinusT * oneMinusT * t * y1 +
        3 * oneMinusT * t * t * y2 +
        t * t * t * y3;

    return {x, y};
}

inline std::vector<std::array<float, 8>> pawn_profile = {
    { 1.45f, -1.028f, 5.801f, -2.287f, 9.744f, -1.179f, 14.0f, 0.0f },
    { 14.0f, 0.0f, 35.001000000000005f, 5.786f, 52.83f, 16.908f, 64.101f, 36.031f },
    { 64.101f, 36.031f, 74.095f, 53.684f, 77.223f, 74.9f, 71.889f, 94.596f },
    { 71.889f, 94.596f, 72.076f, 107.996f, 65.482f, 119.518f, 56.0f, 129.0f },
    { 56.0f, 129.0f, 58.92f, 129.325f, 59.438f, 129.438f, 61.625f, 131.625f },
    { 61.625f, 131.625f, 61.875f, 134.125f, 61.875f, 134.125f, 61.625f, 136.625f },
    { 61.625f, 136.625f, 61.945f, 140.57f, 62.993f, 143.663f, 65.625f, 146.625f },
    { 65.625f, 146.625f, 67.967f, 147.136f, 70.172f, 147.312f, 72.566f, 147.387f },
    { 72.566f, 147.387f, 76.0f, 150.0f, 76.0f, 150.0f, 78.0f, 152.0f },
    { 78.0f, 152.0f, 78.758f, 156.632f, 78.758f, 156.632f, 78.0f, 159.0f },
    { 78.0f, 159.0f, 76.469f, 159.879f, 76.469f, 159.879f, 74.562f, 160.5f },
    { 74.562f, 160.5f, 72.657f, 161.09f, 72.657f, 161.09f, 71.0f, 162.0f },
    { 71.0f, 162.0f, 69.46f, 165.492f, 69.46f, 165.492f, 70.0f, 169.0f },
    { 70.0f, 169.0f, 73.195f, 173.934f, 77.738f, 179.108f, 83.543f, 180.695f },
    { 83.543f, 180.695f, 88.27000000000001f, 181.48399999999998f, 88.27000000000001f, 181.48399999999998f, 89.35600000000001f, 182.57f },
    { 89.35600000000001f, 182.57f, 89.48100000000001f, 184.212f, 89.53200000000001f, 185.85999999999999f, 89.543f, 187.507f },
    { 89.543f, 187.507f, 92.0f, 193.0f, 92.0f, 193.0f, 90.0f, 195.0f },
    { 90.0f, 195.0f, 85.274f, 195.452f, 82.737f, 198.044f, 79.5f, 201.25f },
    { 79.5f, 201.25f, 76.36f, 204.53f, 75.144f, 206.96f, 74.906f, 211.639f },
    { 74.906f, 211.639f, 75.36800000000001f, 214.946f, 75.36800000000001f, 214.946f, 76.906f, 217.639f },
    { 76.906f, 217.639f, 79.41000000000001f, 218.54000000000002f, 79.41000000000001f, 218.54000000000002f, 81.906f, 218.639f },
    { 81.906f, 218.639f, 82.906f, 219.639f, 82.906f, 219.639f, 83.156f, 223.07600000000002f },
    { 83.156f, 223.07600000000002f, 83.081f, 226.40200000000002f, 83.081f, 226.40200000000002f, 81.843f, 228.07600000000002f },
    { 81.843f, 228.07600000000002f, 79.74300000000001f, 228.68600000000004f, 78.32300000000001f, 228.54900000000004f, 76.156f, 228.389f },
    { 76.156f, 228.389f, 75.426f, 231.436f, 75.426f, 231.436f, 77.156f, 234.389f },
    { 77.156f, 234.389f, 79.266f, 235.061f, 81.135f, 235.20100000000002f, 83.343f, 235.28400000000002f },
    { 83.343f, 235.28400000000002f, 77.0f, 237.0f, 77.0f, 237.0f, 78.0f, 238.0f },
    { 78.0f, 238.0f, 78.273f, 242.999f, 78.273f, 242.999f, 78.0f, 245.0f },
    { 78.0f, 245.0f, 76.103f, 244.757f, 74.21f, 244.48f, 72.32f, 244.18f },
    { 72.32f, 244.18f, 69.386f, 243.967f, 69.386f, 243.967f, 67.0f, 245.0f },
    { 67.0f, 245.0f, 65.79f, 250.05f, 67.02f, 255.074f, 67.875f, 260.125f },
    { 67.875f, 260.125f, 67.285f, 271.92f, 68.136f, 276.96f, 69.0f, 282.0f },
    { 69.0f, 282.0f, 71.71f, 298.059f, 73.791f, 309.037f, 76.0f, 320.0f },
    { 76.0f, 320.0f, 82.262f, 351.365f, 92.103f, 377.987f, 112.0f, 401.0f },
    { 112.0f, 401.0f, 120.687f, 410.834f, 129.827f, 420.35f, 140.314f, 428.283f },
    { 140.314f, 428.283f, 144.0f, 432.0f, 144.0f, 432.0f, 145.915f, 433.79f },
    { 145.915f, 433.79f, 152.09f, 439.25600000000003f, 156.839f, 439.973f, 164.93699999999998f, 439.81300000000005f },
    { 164.93699999999998f, 439.81300000000005f, 176.0f, 440.0f, 176.0f, 440.0f, 178.0f, 442.0f },
    { 178.0f, 442.0f, 178.573f, 446.5f, 178.573f, 446.5f, 178.0f, 449.0f },
    { 178.0f, 449.0f, 175.75f, 450.937f, 175.75f, 450.937f, 173.0f, 452.0f },
    { 173.0f, 452.0f, 172.955f, 454.0f, 172.962f, 456.0f, 173.0f, 458.0f },
    { 173.0f, 458.0f, 171.655f, 460.306f, 170.755f, 461.657f, 168.309f, 462.77f },
    { 168.309f, 462.77f, 169.487f, 471.30199999999996f, 174.349f, 478.942f, 179.309f, 485.77f },
    { 179.309f, 485.77f, 179.709f, 486.351f, 180.109f, 486.933f, 180.519f, 487.532f },
    { 180.519f, 487.532f, 182.311f, 489.74899999999997f, 183.859f, 490.70599999999996f, 186.66400000000002f, 491.106f },
    { 186.66400000000002f, 491.106f, 190.49400000000003f, 491.703f, 191.75300000000001f, 493.448f, 194.043f, 496.477f },
    { 194.043f, 496.477f, 196.00400000000002f, 500.4f, 195.39000000000001f, 505.19f, 195.043f, 509.477f },
    { 195.043f, 509.477f, 193.799f, 512.524f, 192.931f, 513.843f, 190.293f, 515.727f },
    { 190.293f, 515.727f, 188.203f, 516.424f, 186.65200000000002f, 516.581f, 184.48000000000002f, 516.727f },
    { 184.48000000000002f, 516.727f, 181.40300000000002f, 517.13f, 181.186f, 517.297f, 179.10500000000002f, 519.914f },
    { 179.10500000000002f, 519.914f, 177.181f, 524.962f, 177.103f, 530.4f, 178.675f, 535.547f },
    { 178.675f, 535.547f, 181.88000000000002f, 541.778f, 187.91000000000003f, 545.197f, 193.52700000000002f, 549.0360000000001f },
    { 193.52700000000002f, 549.0360000000001f, 206.40400000000002f, 557.865f, 214.82700000000003f, 569.373f, 217.76600000000002f, 584.84f },
    { 217.76600000000002f, 584.84f, 218.07600000000002f, 587.796f, 217.91100000000003f, 590.576f, 217.73000000000002f, 593.5400000000001f },
    { 217.73000000000002f, 593.5400000000001f, 217.59000000000003f, 596.2330000000001f, 217.59000000000003f, 596.2330000000001f, 218.043f, 598.4770000000001f },
    { 218.043f, 598.4770000000001f, 220.88f, 599.5140000000001f, 220.88f, 599.5140000000001f, 223.03900000000002f, 599.3950000000001f },
    { 223.03900000000002f, 599.3950000000001f, 227.609f, 599.5820000000001f, 231.246f, 602.8320000000001f, 234.668f, 605.6020000000001f },
    { 234.668f, 605.6020000000001f, 239.618f, 611.0120000000001f, 242.344f, 617.2180000000001f, 242.60500000000002f, 624.5390000000001f },
    { 242.60500000000002f, 624.5390000000001f, 242.26000000000002f, 632.2180000000001f, 239.519f, 639.0010000000001f, 234.043f, 644.4770000000001f },
    { 234.043f, 644.4770000000001f, 191.263f, 675.022f, 93.68f, 677.8750000000001f, 43.31999999999999f, 669.8290000000001f },
    { 43.31999999999999f, 669.8290000000001f, 26.789999999999992f, 666.9860000000001f, 8.515999999999991f, 661.686f, -2.003000000000007f, 647.7690000000001f },
    { -2.003000000000007f, 647.7690000000001f, -26.211000000000006f, 609.1600000000001f, -22.313000000000006f, 551.4390000000001f, -22.227000000000007f, 507.8520000000001f },
};
#endif //BEZIERCURVESPAWN_H
